

def server_clock_skew(db, collName):
    """Given the mongodb entries generated by logl,
    attempts to detect and resolve clock skew
    across different servers.  Returns 1 on success,
    -1 on failure"""
    return -1


def server_matchup(db, collName):
    """Given the mongoDB entries generated by logl,
    attempts to resolve any differences in server names
    or missing server names across entries.  Returns
    1 on success, -1 on failure"""
    # (assuming no clock skew, or check for clock skew)
    # first, how can we tell if there exists an unnamed server?
    # --> check if coll.servers has any entries where server_num == origin_server
    # -----> if none, return
    # -----> for each such server:
    # ----------> for each message FROM this server:
    # ---------------> if the message is an important status change
    # ---------------> (not SECONDARY, b/c multiple rs can be SECONDARY?)
    # ---------------> (PRIMARY,

    # what do we actually want to match up?
    # --> entries where the origin server is a number
    # ------> select key events that would signal a match for the server name
    # -----------> like a change of state
    return -1
